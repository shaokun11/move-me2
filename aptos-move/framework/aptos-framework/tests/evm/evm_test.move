#[test_only]
module aptos_framework::evm_test {

    use aptos_framework::evm_for_test::{initialize_for_test, run_test};
    use aptos_framework::account::create_account_for_test;
    use aptos_framework::evm_util::u256_to_data;
    use aptos_std::simple_map;
    use aptos_std::simple_map::SimpleMap;
    use std::vector;


    #[test_only]
    fun init_storage(keys: vector<u256>, values: vector<u256>): SimpleMap<vector<u8>, vector<u8>> {
        let i = 0;
        let len = vector::length(&keys);
        let map = simple_map::new<vector<u8>, vector<u8>>();
        while(i < len) {
            let key = *vector::borrow(&keys, i);
            let value = *vector::borrow(&values, i);
            simple_map::add(&mut map, u256_to_data(key), u256_to_data(value));
            i = i + 1;
        };

        map
    }

    #[test]
    public fun test_run() {
        let aptos_framework = create_account_for_test(@0x1);
        initialize_for_test(&aptos_framework);

        let from = x"a94f5374fce5edbc8e2a8697c15331677e6ebf0b";
        let to = x"b94f5374fce5edbc8e2a8697c15331677e6ebf0b";
        let data = x"";
        let env = vector[u256_to_data(0x0a),x"2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",u256_to_data(0x020000),u256_to_data(0x00),u256_to_data(0x05500000),u256_to_data(0x01),x"0000000000000000000000000000000000000000000000000000000000020000",u256_to_data(0x03e8)];
        let gas_limit = u256_to_data(0x042c1d80);
        let gas_price = u256_to_data(0x0a);
        let value = u256_to_data(0x00);

        let storage_maps = simple_map::new<vector<u8>, simple_map::SimpleMap<vector<u8>, vector<u8>>>();
        let (storage_keys, storage_values) = (vector::empty<vector<vector<u8>>>(), vector::empty<vector<vector<u8>>>());
        
        // simple_map::add(&mut storage_maps, x"a00000000000000000000000000000000000000a", init_storage(vector[0x02], vector[0xffff]));



        let addresses = vector[x"0000000000000000000000000000000000000000", x"0100000000000000000000000000000000000000", x"0200000000000000000000000000000000000000", x"0300000000000000000000000000000000000000", x"0400000000000000000000000000000000000000", x"0500000000000000000000000000000000000000", x"0600000000000000000000000000000000000000", x"0700000000000000000000000000000000000000", x"0800000000000000000000000000000000000000", x"0900000000000000000000000000000000000000", x"0a00000000000000000000000000000000000000", x"0b00000000000000000000000000000000000000", x"0c00000000000000000000000000000000000000", x"0d00000000000000000000000000000000000000", x"0e00000000000000000000000000000000000000", x"0f00000000000000000000000000000000000000", x"1000000000000000000000000000000000000000", x"1100000000000000000000000000000000000000", x"1200000000000000000000000000000000000000", x"1300000000000000000000000000000000000000", x"1400000000000000000000000000000000000000", x"1500000000000000000000000000000000000000", x"1600000000000000000000000000000000000000", x"1700000000000000000000000000000000000000", x"1800000000000000000000000000000000000000", x"1900000000000000000000000000000000000000", x"1a00000000000000000000000000000000000000", x"1b00000000000000000000000000000000000000", x"1c00000000000000000000000000000000000000", x"1d00000000000000000000000000000000000000", x"1e00000000000000000000000000000000000000", x"1f00000000000000000000000000000000000000", x"2000000000000000000000000000000000000000", x"2100000000000000000000000000000000000000", x"2200000000000000000000000000000000000000", x"2300000000000000000000000000000000000000", x"2400000000000000000000000000000000000000", x"2500000000000000000000000000000000000000", x"2600000000000000000000000000000000000000", x"2700000000000000000000000000000000000000", x"2800000000000000000000000000000000000000", x"2900000000000000000000000000000000000000", x"2a00000000000000000000000000000000000000", x"2b00000000000000000000000000000000000000", x"2c00000000000000000000000000000000000000", x"2d00000000000000000000000000000000000000", x"2e00000000000000000000000000000000000000", x"2f00000000000000000000000000000000000000", x"3000000000000000000000000000000000000000", x"3100000000000000000000000000000000000000", x"3200000000000000000000000000000000000000", x"3300000000000000000000000000000000000000", x"3400000000000000000000000000000000000000", x"3500000000000000000000000000000000000000", x"3600000000000000000000000000000000000000", x"3700000000000000000000000000000000000000", x"3800000000000000000000000000000000000000", x"3900000000000000000000000000000000000000", x"3a00000000000000000000000000000000000000", x"3b00000000000000000000000000000000000000", x"3c00000000000000000000000000000000000000", x"3d00000000000000000000000000000000000000", x"3e00000000000000000000000000000000000000", x"3f00000000000000000000000000000000000000", x"4000000000000000000000000000000000000000", x"4100000000000000000000000000000000000000", x"4200000000000000000000000000000000000000", x"4300000000000000000000000000000000000000", x"4400000000000000000000000000000000000000", x"4500000000000000000000000000000000000000", x"4600000000000000000000000000000000000000", x"4700000000000000000000000000000000000000", x"4800000000000000000000000000000000000000", x"4900000000000000000000000000000000000000", x"4a00000000000000000000000000000000000000", x"4b00000000000000000000000000000000000000", x"4c00000000000000000000000000000000000000", x"4d00000000000000000000000000000000000000", x"4e00000000000000000000000000000000000000", x"4f00000000000000000000000000000000000000", x"5000000000000000000000000000000000000000", x"5100000000000000000000000000000000000000", x"5200000000000000000000000000000000000000", x"5300000000000000000000000000000000000000", x"5400000000000000000000000000000000000000", x"5500000000000000000000000000000000000000", x"5600000000000000000000000000000000000000", x"5700000000000000000000000000000000000000", x"5800000000000000000000000000000000000000", x"5900000000000000000000000000000000000000", x"5a00000000000000000000000000000000000000", x"5b00000000000000000000000000000000000000", x"5c00000000000000000000000000000000000000", x"5d00000000000000000000000000000000000000", x"5e00000000000000000000000000000000000000", x"5f00000000000000000000000000000000000000", x"6000000000000000000000000000000000000000", x"6100000000000000000000000000000000000000", x"6200000000000000000000000000000000000000", x"6300000000000000000000000000000000000000", x"6400000000000000000000000000000000000000", x"6500000000000000000000000000000000000000", x"6600000000000000000000000000000000000000", x"6700000000000000000000000000000000000000", x"6800000000000000000000000000000000000000", x"6900000000000000000000000000000000000000", x"6a00000000000000000000000000000000000000", x"6b00000000000000000000000000000000000000", x"6c00000000000000000000000000000000000000", x"6d00000000000000000000000000000000000000", x"6e00000000000000000000000000000000000000", x"6f00000000000000000000000000000000000000", x"7000000000000000000000000000000000000000", x"7100000000000000000000000000000000000000", x"7200000000000000000000000000000000000000", x"7300000000000000000000000000000000000000", x"7400000000000000000000000000000000000000", x"7500000000000000000000000000000000000000", x"7600000000000000000000000000000000000000", x"7700000000000000000000000000000000000000", x"7800000000000000000000000000000000000000", x"7900000000000000000000000000000000000000", x"7a00000000000000000000000000000000000000", x"7b00000000000000000000000000000000000000", x"7c00000000000000000000000000000000000000", x"7d00000000000000000000000000000000000000", x"7e00000000000000000000000000000000000000", x"7f00000000000000000000000000000000000000", x"8000000000000000000000000000000000000000", x"8100000000000000000000000000000000000000", x"8200000000000000000000000000000000000000", x"8300000000000000000000000000000000000000", x"8400000000000000000000000000000000000000", x"8500000000000000000000000000000000000000", x"8600000000000000000000000000000000000000", x"8700000000000000000000000000000000000000", x"8800000000000000000000000000000000000000", x"8900000000000000000000000000000000000000", x"8a00000000000000000000000000000000000000", x"8b00000000000000000000000000000000000000", x"8c00000000000000000000000000000000000000", x"8d00000000000000000000000000000000000000", x"8e00000000000000000000000000000000000000", x"8f00000000000000000000000000000000000000", x"9000000000000000000000000000000000000000", x"9100000000000000000000000000000000000000", x"9200000000000000000000000000000000000000", x"9300000000000000000000000000000000000000", x"9400000000000000000000000000000000000000", x"9500000000000000000000000000000000000000", x"9600000000000000000000000000000000000000", x"9700000000000000000000000000000000000000", x"9800000000000000000000000000000000000000", x"9900000000000000000000000000000000000000", x"9a00000000000000000000000000000000000000", x"9b00000000000000000000000000000000000000", x"9c00000000000000000000000000000000000000", x"9d00000000000000000000000000000000000000", x"9e00000000000000000000000000000000000000", x"9f00000000000000000000000000000000000000", x"a000000000000000000000000000000000000000", x"a100000000000000000000000000000000000000", x"a200000000000000000000000000000000000000", x"a300000000000000000000000000000000000000", x"a400000000000000000000000000000000000000", x"a500000000000000000000000000000000000000", x"a600000000000000000000000000000000000000", x"a700000000000000000000000000000000000000", x"a800000000000000000000000000000000000000", x"a900000000000000000000000000000000000000", x"a94f5374fce5edbc8e2a8697c15331677e6ebf0b", x"aa00000000000000000000000000000000000000", x"ab00000000000000000000000000000000000000", x"ac00000000000000000000000000000000000000", x"ad00000000000000000000000000000000000000", x"ae00000000000000000000000000000000000000", x"af00000000000000000000000000000000000000", x"b000000000000000000000000000000000000000", x"b100000000000000000000000000000000000000", x"b200000000000000000000000000000000000000", x"b300000000000000000000000000000000000000", x"b400000000000000000000000000000000000000", x"b500000000000000000000000000000000000000", x"b600000000000000000000000000000000000000", x"b700000000000000000000000000000000000000", x"b800000000000000000000000000000000000000", x"b900000000000000000000000000000000000000", x"b94f5374fce5edbc8e2a8697c15331677e6ebf0b", x"ba00000000000000000000000000000000000000", x"bb00000000000000000000000000000000000000", x"bc00000000000000000000000000000000000000", x"bd00000000000000000000000000000000000000", x"be00000000000000000000000000000000000000", x"bf00000000000000000000000000000000000000", x"c000000000000000000000000000000000000000", x"c100000000000000000000000000000000000000", x"c200000000000000000000000000000000000000", x"c300000000000000000000000000000000000000", x"c400000000000000000000000000000000000000", x"c500000000000000000000000000000000000000", x"c600000000000000000000000000000000000000", x"c700000000000000000000000000000000000000", x"c800000000000000000000000000000000000000", x"c900000000000000000000000000000000000000", x"ca00000000000000000000000000000000000000", x"cb00000000000000000000000000000000000000", x"cc00000000000000000000000000000000000000", x"cd00000000000000000000000000000000000000", x"ce00000000000000000000000000000000000000", x"cf00000000000000000000000000000000000000", x"d000000000000000000000000000000000000000", x"d100000000000000000000000000000000000000", x"d200000000000000000000000000000000000000", x"d300000000000000000000000000000000000000", x"d400000000000000000000000000000000000000", x"d500000000000000000000000000000000000000", x"d600000000000000000000000000000000000000", x"d700000000000000000000000000000000000000", x"d800000000000000000000000000000000000000", x"d900000000000000000000000000000000000000", x"da00000000000000000000000000000000000000", x"db00000000000000000000000000000000000000", x"dc00000000000000000000000000000000000000", x"dd00000000000000000000000000000000000000", x"de00000000000000000000000000000000000000", x"df00000000000000000000000000000000000000", x"e000000000000000000000000000000000000000", x"e100000000000000000000000000000000000000", x"e200000000000000000000000000000000000000", x"e300000000000000000000000000000000000000", x"e400000000000000000000000000000000000000", x"e500000000000000000000000000000000000000", x"e600000000000000000000000000000000000000", x"e700000000000000000000000000000000000000", x"e800000000000000000000000000000000000000", x"e900000000000000000000000000000000000000", x"ea00000000000000000000000000000000000000", x"eb00000000000000000000000000000000000000", x"ec00000000000000000000000000000000000000", x"ed00000000000000000000000000000000000000", x"ee00000000000000000000000000000000000000", x"ef00000000000000000000000000000000000000", x"f000000000000000000000000000000000000000", x"f100000000000000000000000000000000000000", x"f200000000000000000000000000000000000000", x"f300000000000000000000000000000000000000", x"f400000000000000000000000000000000000000", x"f500000000000000000000000000000000000000", x"f600000000000000000000000000000000000000", x"f700000000000000000000000000000000000000", x"f800000000000000000000000000000000000000", x"f900000000000000000000000000000000000000", x"fa00000000000000000000000000000000000000", x"fb00000000000000000000000000000000000000", x"fc00000000000000000000000000000000000000", x"fd00000000000000000000000000000000000000", x"fe00000000000000000000000000000000000000", x"ff00000000000000000000000000000000000000"];
        let balance_table = vector[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b9aca00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
        let codes = vector[x"00", x"01", x"02", x"03", x"04", x"05", x"06", x"07", x"08", x"09", x"0a", x"0b", x"0c", x"0d", x"0e", x"0f", x"10", x"11", x"12", x"13", x"14", x"15", x"16", x"17", x"18", x"19", x"1a", x"1b", x"1c", x"1d", x"1e", x"1f", x"20", x"21", x"22", x"23", x"24", x"25", x"26", x"27", x"28", x"29", x"2a", x"2b", x"2c", x"2d", x"2e", x"2f", x"30", x"31", x"32", x"33", x"34", x"35", x"36", x"37", x"38", x"39", x"3a", x"3b", x"3c", x"3d", x"3e", x"3f", x"40", x"41", x"42", x"43", x"44", x"45", x"46", x"47", x"48", x"49", x"4a", x"4b", x"4c", x"4d", x"4e", x"4f", x"50", x"51", x"52", x"53", x"54", x"55", x"56", x"57", x"58", x"59", x"5a", x"5b", x"5c", x"5d", x"5e", x"5f", x"60", x"61", x"62", x"63", x"64", x"65", x"66", x"67", x"68", x"69", x"6a", x"6b", x"6c", x"6d", x"6e", x"6f", x"70", x"71", x"72", x"73", x"74", x"75", x"76", x"77", x"78", x"79", x"7a", x"7b", x"7c", x"7d", x"7e", x"7f", x"80", x"81", x"82", x"83", x"84", x"85", x"86", x"87", x"88", x"89", x"8a", x"8b", x"8c", x"8d", x"8e", x"8f", x"90", x"91", x"92", x"93", x"94", x"95", x"96", x"97", x"98", x"99", x"9a", x"9b", x"9c", x"9d", x"9e", x"9f", x"a0", x"a1", x"a2", x"a3", x"a4", x"a5", x"a6", x"a7", x"a8", x"a9", x"", x"aa", x"ab", x"ac", x"ad", x"ae", x"af", x"b0", x"b1", x"b2", x"b3", x"b4", x"b5", x"b6", x"b7", x"b8", x"b9", x"60005b6101008110601257600161010055005b8060008080808060019660981b612710f1602c575b016002565b818155602756", x"ba", x"bb", x"bc", x"bd", x"be", x"bf", x"c0", x"c1", x"c2", x"c3", x"c4", x"c5", x"c6", x"c7", x"c8", x"c9", x"ca", x"cb", x"cc", x"cd", x"ce", x"cf", x"d0", x"d1", x"d2", x"d3", x"d4", x"d5", x"d6", x"d7", x"d8", x"d9", x"da", x"db", x"dc", x"dd", x"de", x"df", x"e0", x"e1", x"e2", x"e3", x"e4", x"e5", x"e6", x"e7", x"e8", x"e9", x"ea", x"eb", x"ec", x"ed", x"ee", x"ef", x"f0", x"f1", x"f2", x"f3", x"f4", x"f5", x"f6", x"f7", x"f8", x"f9", x"fa", x"fb", x"fc", x"fd", x"fe", x"ff"];
        let nonce_table = vector[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
        let i = 0;
        let balances = vector::empty<vector<u8>>();
        let nonces = vector::empty<u64>();
        while(i < vector::length(&addresses)) {
            let address = *vector::borrow(&addresses, i);
            let nonce =  *vector::borrow(&nonce_table, i);
            vector::push_back(&mut nonces, nonce);

            let balance = *vector::borrow(&balance_table, i);
            vector::push_back(&mut balances, u256_to_data(balance));

            if(simple_map::contains_key(&storage_maps, &address)) {
                let data = simple_map::borrow(&storage_maps, &address);
                vector::push_back(&mut storage_keys, simple_map::keys(data));
                vector::push_back(&mut storage_values, simple_map::values(data));
            } else {
                vector::push_back(&mut storage_keys, vector::empty<vector<u8>>());
                vector::push_back(&mut storage_values, vector::empty<vector<u8>>());
            };
            i = i + 1;
        };

        run_test(
            addresses,
            codes,
            nonces,
            balances,
            storage_keys,
            storage_values,
            from,
            to,
            data,
            gas_limit,
            gas_price,
            value,
            env
        );
    }
}