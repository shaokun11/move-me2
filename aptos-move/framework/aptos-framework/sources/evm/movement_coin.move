module aptos_framework::movement_coin {
    friend aptos_framework::genesis;

    use aptos_framework::evm::{get_nonce, get_evm_address, send_move_tx_to_evm};
    use std::string;
    use std::signer::address_of;
    use aptos_framework::evm_util::{get_contract_address, u256_to_data};
    use std::bcs::to_bytes;
    use aptos_framework::primary_fungible_store;
    use aptos_framework::object;
    use std::option;
    use aptos_framework::object::{ConstructorRef};
    use aptos_framework::fungible_asset::{Metadata};
    use aptos_std::debug;
    use aptos_framework::system_addresses;
    use aptos_std::table;
    use aptos_std::table::Table;
    use std::vector;

    const COIN_DEPLOY_BYTECODE: vector<u8> = x"60806040526101016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b50604051610e49380380610e49833981810160405281019061007491906100bc565b80600181905550506100e9565b600080fd5b6000819050919050565b61009981610086565b81146100a457600080fd5b50565b6000815190506100b681610090565b92915050565b6000602082840312156100d2576100d1610081565b5b60006100e0848285016100a7565b91505092915050565b610d51806100f86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314c2d8cf1461004657806370a0823114610076578063a9059cbb146100a6575b600080fd5b610060600480360381019061005b9190610845565b6100d6565b60405161006d91906108a0565b60405180910390f35b610090600480360381019061008b9190610919565b61034d565b60405161009d9190610955565b60405180910390f35b6100c060048036038101906100bb9190610970565b610547565b6040516100cd91906108a0565b60405180910390f35b600080600660015485856040516020016100f39493929190610a11565b6040516020818303038152906040526040516024016101129190610ae6565b6040516020818303038152906040527f2c9e6315000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000816040516024016101a49190610ae6565b6040516020818303038152906040527f4239e36b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161026b9190610b44565b6000604051808303816000865af19150503d80600081146102a8576040519150601f19603f3d011682016040523d82523d6000602084013e6102ad565b606091505b50509050806102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610bb8565b60405180910390fd5b853373ffffffffffffffffffffffffffffffffffffffff167fbc8fc58b22264fea96a8c8ea28726ca7fb64d6ab67c3bac7282636f2ccb68394876040516103389190610955565b60405180910390a36001935050505092915050565b600080600180548460405160200161036793929190610c22565b6040516020818303038152906040526040516024016103869190610ae6565b6040516020818303038152906040527f2c9e6315000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000816040516024016104189190610ae6565b6040516020818303038152906040527f4239e36b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516104df9190610b44565b600060405180830381855afa9150503d806000811461051a576040519150601f19603f3d011682016040523d82523d6000602084013e61051f565b606091505b509150506000818060200190518101906105399190610c6e565b905080945050505050919050565b600080600560015485856040516020016105649493929190610cd6565b6040516020818303038152906040526040516024016105839190610ae6565b6040516020818303038152906040527f2c9e6315000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000816040516024016106159190610ae6565b6040516020818303038152906040527f4239e36b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516106dc9190610b44565b6000604051808303816000865af19150503d8060008114610719576040519150601f19603f3d011682016040523d82523d6000602084013e61071e565b606091505b5050905080610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990610bb8565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516107bf9190610955565b60405180910390a36001935050505092915050565b600080fd5b6000819050919050565b6107ec816107d9565b81146107f757600080fd5b50565b600081359050610809816107e3565b92915050565b6000819050919050565b6108228161080f565b811461082d57600080fd5b50565b60008135905061083f81610819565b92915050565b6000806040838503121561085c5761085b6107d4565b5b600061086a858286016107fa565b925050602061087b85828601610830565b9150509250929050565b60008115159050919050565b61089a81610885565b82525050565b60006020820190506108b56000830184610891565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e6826108bb565b9050919050565b6108f6816108db565b811461090157600080fd5b50565b600081359050610913816108ed565b92915050565b60006020828403121561092f5761092e6107d4565b5b600061093d84828501610904565b91505092915050565b61094f8161080f565b82525050565b600060208201905061096a6000830184610946565b92915050565b60008060408385031215610987576109866107d4565b5b600061099585828601610904565b92505060206109a685828601610830565b9150509250929050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006109ec6109e76109e2846109b0565b6109c7565b6109ba565b9050919050565b6109fc816109d1565b82525050565b610a0b816107d9565b82525050565b6000608082019050610a2660008301876109f3565b610a336020830186610a02565b610a406040830185610a02565b610a4d6060830184610946565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a90578082015181840152602081019050610a75565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ab882610a56565b610ac28185610a61565b9350610ad2818560208601610a72565b610adb81610a9c565b840191505092915050565b60006020820190508181036000830152610b008184610aad565b905092915050565b600081905092915050565b6000610b1e82610a56565b610b288185610b08565b9350610b38818560208601610a72565b80840191505092915050565b6000610b508284610b13565b915081905092915050565b600082825260208201905092915050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ba2600b83610b5b565b9150610bad82610b6c565b602082019050919050565b60006020820190508181036000830152610bd181610b95565b9050919050565b6000819050919050565b6000610bfd610bf8610bf384610bd8565b6109c7565b6109ba565b9050919050565b610c0d81610be2565b82525050565b610c1c816108db565b82525050565b6000606082019050610c376000830186610c04565b610c446020830185610a02565b610c516040830184610c13565b949350505050565b600081519050610c6881610819565b92915050565b600060208284031215610c8457610c836107d4565b5b6000610c9284828501610c59565b91505092915050565b6000819050919050565b6000610cc0610cbb610cb684610c9b565b6109c7565b6109ba565b9050919050565b610cd081610ca5565b82525050565b6000608082019050610ceb6000830187610cc7565b610cf86020830186610a02565b610d056040830185610c13565b610d126060830184610946565b9594505050505056fea264697066735822122035622a4da458fbf58483f4210af2b5c015bbd768b89d21dc5ead491eadbcf44f64736f6c63430008120033";
    const ZERO_ADDR: vector<u8> =      x"0000000000000000000000000000000000000000000000000000000000000000";

    struct CoinStore has key {
        evm_to_move: Table<vector<u8>, address>
    }

    public(friend) fun initialize(aptos_framework: &signer) {
        system_addresses::assert_aptos_framework(aptos_framework);
        move_to(aptos_framework, CoinStore {
            evm_to_move: table::new<vector<u8>, address>()
        });
    }

    public fun create_movement_coin(
        creator: &signer,
        name: string::String,
        symbol: string::String
    ): (ConstructorRef, vector<u8>) acquires CoinStore {
        let account_addr = address_of(creator);
        let nonce = get_nonce(get_evm_address(account_addr));
        let evm_address = get_contract_address(to_bytes(&account_addr), nonce);

        // Create the Move fungible asset
        let constructor_ref = object::create_named_object(creator, evm_address);
        let asset_address = object::create_object_address(&address_of(creator), evm_address);

        // Deploy the EVM ERC20 contract
        let byte_code = COIN_DEPLOY_BYTECODE;
        vector::append(&mut byte_code, to_bytes(&asset_address));
        send_move_tx_to_evm(creator, ZERO_ADDR, u256_to_data(0), byte_code, 1);

        // Add the mapping from EVM address to Move address
        let coin_store = borrow_global_mut<CoinStore>(@aptos_framework);
        table::add(&mut coin_store.evm_to_move, evm_address, asset_address);

        primary_fungible_store::create_primary_store_enabled_fungible_asset(
            &constructor_ref,
            option::none(),
            name,
            symbol,
            6,
            string::utf8(b""),
            string::utf8(b""),
        );

        debug::print(&primary_fungible_store::balance<Metadata>(account_addr, object::object_from_constructor_ref(&constructor_ref)));
        (constructor_ref, evm_address)
    }

    #[test_only]
    public fun initialize_for_test(aptos_framework: &signer) {
        initialize(aptos_framework)
    }

}