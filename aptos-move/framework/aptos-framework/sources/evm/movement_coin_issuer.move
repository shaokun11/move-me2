module aptos_framework::movement_coin_issuer {
    use aptos_framework::evm::{get_nonce, get_evm_address, send_move_tx_to_evm};
    use std::string;
    use std::signer::address_of;
    use aptos_framework::evm_util::{get_contract_address, u256_to_data};
    use std::bcs::to_bytes;
    use aptos_framework::movement_coin;

    const COIN_DEPLOY_BYTECODE: vector<u8> = x"608060405261010160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015610051575f80fd5b506108838061005f5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c806306fdde031461006457806318160ddd14610082578063313ce567146100a057806370a08231146100be57806395d89b41146100ee578063a9059cbb1461010c575b5f80fd5b61006c61013c565b60405161007991906104af565b60405180910390f35b61008a610152565b60405161009791906104e7565b60405180910390f35b6100a861015a565b6040516100b5919061051b565b60405180910390f35b6100d860048036038101906100d39190610592565b610162565b6040516100e591906104e7565b60405180910390f35b6100f66102a1565b60405161010391906104af565b60405180910390f35b610126600480360381019061012191906105e7565b6102b7565b604051610133919061063f565b60405180910390f35b606060405180602001604052805f815250905090565b5f8054905090565b5f6006905090565b5f806001836040516024016101789291906106a9565b6040516020818303038152906040527f2db37546000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161023e9190610714565b5f60405180830381855afa9150503d805f8114610276576040519150601f19603f3d011682016040523d82523d5f602084013e61027b565b606091505b509150505f81806020019051810190610294919061073e565b9050809350505050919050565b606060405180602001604052805f815250905090565b5f8060053385856040516024016102d194939291906107a2565b6040516020818303038152906040527f7f0fe8a3000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516103979190610714565b5f604051808303815f865af19150503d805f81146103d0576040519150601f19603f3d011682016040523d82523d5f602084013e6103d5565b606091505b5050905080610419576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104109061082f565b60405180910390fd5b60019250505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561045c578082015181840152602081019050610441565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61048182610425565b61048b818561042f565b935061049b81856020860161043f565b6104a481610467565b840191505092915050565b5f6020820190508181035f8301526104c78184610477565b905092915050565b5f819050919050565b6104e1816104cf565b82525050565b5f6020820190506104fa5f8301846104d8565b92915050565b5f60ff82169050919050565b61051581610500565b82525050565b5f60208201905061052e5f83018461050c565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056182610538565b9050919050565b61057181610557565b811461057b575f80fd5b50565b5f8135905061058c81610568565b92915050565b5f602082840312156105a7576105a6610534565b5b5f6105b48482850161057e565b91505092915050565b6105c6816104cf565b81146105d0575f80fd5b50565b5f813590506105e1816105bd565b92915050565b5f80604083850312156105fd576105fc610534565b5b5f61060a8582860161057e565b925050602061061b858286016105d3565b9150509250929050565b5f8115159050919050565b61063981610625565b82525050565b5f6020820190506106525f830184610630565b92915050565b5f819050919050565b5f819050919050565b5f61068461067f61067a84610658565b610661565b610500565b9050919050565b6106948161066a565b82525050565b6106a381610557565b82525050565b5f6040820190506106bc5f83018561068b565b6106c9602083018461069a565b9392505050565b5f81519050919050565b5f81905092915050565b5f6106ee826106d0565b6106f881856106da565b935061070881856020860161043f565b80840191505092915050565b5f61071f82846106e4565b915081905092915050565b5f81519050610738816105bd565b92915050565b5f6020828403121561075357610752610534565b5b5f6107608482850161072a565b91505092915050565b5f819050919050565b5f61078c61078761078284610769565b610661565b610500565b9050919050565b61079c81610772565b82525050565b5f6080820190506107b55f830187610793565b6107c2602083018661069a565b6107cf604083018561069a565b6107dc60608301846104d8565b95945050505050565b7f63616c6c206661696c65640000000000000000000000000000000000000000005f82015250565b5f610819600b8361042f565b9150610824826107e5565b602082019050919050565b5f6020820190508181035f8301526108468161080d565b905091905056fea26469706673582212204fa146611ba45eb826770b2def1be06e85f341d29fd95fd38ce5bc88b59d94bf64736f6c63430008140033";
    const ZERO_ADDR: vector<u8> =      x"0000000000000000000000000000000000000000000000000000000000000000";

    public entry fun create_movement_coin<CoinType>(
        creator: &signer,
        name: string::String,
        symbol: string::String,
        supply: u256,
        decimals: u8
    ) {
        let account_addr = address_of(creator);
        let nonce = get_nonce(get_evm_address(account_addr));
        let evm_address = get_contract_address(to_bytes(&account_addr), nonce);
        send_move_tx_to_evm(creator, 0, ZERO_ADDR, u256_to_data(0), COIN_DEPLOY_BYTECODE, 1);
        movement_coin::create<CoinType>(creator, evm_address, name, symbol, supply, decimals);
    }
}