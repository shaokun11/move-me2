import { BigNumber } from 'bignumber.js';
import { randomBytes } from 'node:crypto';
import { HexString } from 'aptos';
import { TransactionFactory } from '@ethereumjs/tx';

export function parseRawTx(tx) {
    let tx2 = null;
    try {
        tx2 = TransactionFactory.fromSerializedData(Buffer.from(tx.slice(2), 'hex'));
        // console.log(tx2);
    } catch (error) {
        throw new Error('Invalid transaction');
    }
    //  enum TransactionType {
    //     Legacy = 0,
    //     AccessListEIP2930 = 1,
    //     FeeMarketEIP1559 = 2,
    //     BlobEIP4844 = 3,
    //   }
    if (tx.type >= 3) {
        throw new Error('Invalid transaction type');
    }
    let gasPrice = null;
    let maxPriorityFeePerGas = null;
    let maxFeePerGas = null;
    if (tx2.gasPrice) {
        gasPrice = toHex(tx2.gasPrice);
    }
    if (tx2.gasPrice === 0n) {
        gasPrice = '0x0';
    }
    if (tx2.maxFeePerGas === 0n) {
        maxFeePerGas = '0x0';
    }
    if (tx2.maxPriorityFeePerGas === 0n) {
        maxPriorityFeePerGas = '0x0';
    }
    if (tx2.maxPriorityFeePerGas) {
        maxPriorityFeePerGas = toHex(tx2.maxPriorityFeePerGas);
    }
    if (tx2.maxFeePerGas) {
        maxFeePerGas = toHex(tx2.maxFeePerGas);
    }
    return {
        type: toHex(tx2.type),
        from: tx2.getSenderAddress().toString().toLowerCase(),
        to: tx2.to?.toString().toLowerCase(),
        hash: '0x' + Buffer.from(tx2.hash()).toString('hex').padStart(64, '0'),
        messageHash: '0x' + Buffer.from(tx2.getHashedMessageToSign()).toString('hex').padStart(64, '0'),
        nonce: parseInt(tx2.nonce),
        maxPriorityFeePerGas: maxPriorityFeePerGas,
        maxFeePerGas: maxFeePerGas,
        gasPrice: gasPrice,
        limit: toHex(tx2.gasLimit),
        value: toHex(tx2.value),
        data: '0x' + Buffer.from(tx2.data).toString('hex'),
        v: toHex(tx2.v?.toString() ?? 27),
        r: (tx2.r && toHex(tx2.r)) || '0x',
        s: (tx2.s && toHex(tx2.s)) || '0x',
        chainId: toHex(tx2.common.chainId()),
        accessList: tx2.accessList || [],
    };
}

export function toHex(number, remove_zero = false) {
    let ret = BigNumber(number).toString(16);
    if (remove_zero) {
        while (ret.startsWith('0')) {
            ret = ret.slice(1);
        }
    }
    return '0x' + ret;
}

export function toHexStrict(number) {
    let ret = BigNumber(number).toString(16);
    if (ret.length % 2 != 0) {
        ret = '0' + ret;
    }
    return '0x' + ret;
}

export function toNumber(number) {
    return BigNumber(number).toNumber();
}

export function toNumberStr(number) {
    return BigNumber(number).decimalPlaces(0).toFixed();
}

export function toU256Hex(a, includePrefix = true) {
    let it = toHex(a).slice(2).padStart(64, '0');
    if (includePrefix) return '0x' + it;
    return it;
}

export function sleep(s) {
    return new Promise(r => {
        setTimeout(r, s * 1000);
    });
}

export function randomHex(bytes = 32) {
    return '0x' + Buffer.from(randomBytes(bytes)).toString('hex');
}

// let x =
//     '0x02f904b582780c048502540be4008502540be400834b482a94b1dadd5b6ca0880b20051c66bbbe7be9aad813dc80b90444a78563a4515be62244e966be715cdd306701b20a14e0310aaa49ace7e06f0b42193a4446000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000066d4c3100000000000000000000000000000000000000000000000000000000066d6141800000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000000000000000000000024b4b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000065465616d2031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065465616d2032000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065465616d2033000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065465616d2034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c568747470733a2f2f666972656261736573746f726167652e676f6f676c65617069732e636f6d2f76302f622f62726b742d65373065362e61707073706f742e636f6d2f6f2f636f6d7065746974696f6e25324631626164313737622d313964312d343933392d613165652d61326465633634623131373025324662726b742d64656661756c742d696d6167652e706e673f616c743d6d6564696126746f6b656e3d38626332623564332d646530342d343034612d393065642d353039626465616563373563000000000000000000000000000000000000000000000000000000c001a04d2a34666afc4b9cd7841a7eb69bb205ffc3a9cc8d2ed5264d07ea1307aa2649a01b7460f3f3b0fb81be140fbd0ab5f34d664a750b379f52f54c2414677fd01220';
// let x1 =
//     '0xf908a80d808340c27894d06758a08a78ef28f56b4efa35ac87ef21d56f1580b90844ac9650d800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000447d39aaf1000000000000000000000000dab7bb57182f395638bb8cb781ddc9fc45f247d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064e6d66ac800000000000000000000000038604d543659121faa8f68a91a5b633c7bfe9761000000000000000000000000dab7bb57182f395638bb8cb781ddc9fc45f247d00000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000644ea4d9387000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000a3f5c3a6b40871c8b34020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b1e05babf77faecc8729aa3729de270adf795dc1e6add000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026e76b18d4a132a9397c46af11e4688bdb602e920000000000000000000000003a7315a05bfca36cd309266f99028cf80ad6b1c600000000000000000000000038604d543659121faa8f68a91a5b633c7bfe976100000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000800000000000000000000000047759683e8789130571673c2968c8f4b9f22c251000000000000000000000000eb3c2e768c17e0c2aff98bdf0024d38a18b0b62e00000000000000000000000038604d543659121faa8f68a91a5b633c7bfe9761000000000000000000000000d778b815e6ae26f547042bbbe4bf8b1b0c746a22000000000000000000000000eac3d56dcb15a3bc174ab292b7023e9fc9f7adf00000000000000000000000002a197c29f3e144387eb5877cfe0e63032fd1a0da0000000000000000000000001ad94d0a799664d459cb467655ec0ea4cc8ad478000000000000000000000000b9adf17948481eb380d37e9594fd4382372dbcd00000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000746a528800000000000000000000000000000000000000000000000000000000746a5288000000000000000000000000000000000000000000020fca7b546ed0c4ce9000000000000000000000000000000000000000000000020fca7b546ed0c4ce90000000000000000000000000000000000000000000000000d3bcb0076ec03df0000000000000000000000000000000000000000000000000d3bcb0076ec03df00000000000000000000000000000000000000000000000000000000974e2476aac00000000000000000000000000000000000000000000000000000974e2476aac00000000000000000000000000000000000000000000000000000b26961fed6a20000000000000000000000000000000000000000000000000000b26961fed6a20000000000000000000000000000000000000000000000000000005361e9d5400000000000000000000000000000000000000000000000000000005361e9d5400000000000000000000000000000000000000000000000000000000826299e000000000000000000000000000000000000000000000000000000000826299e00000000000000000000000000000000000000000000000000000001abe0854adf400000000000000000000000000000000000000000000000000001abe0854adf40000000000000000000000000000000000000000000000000000000082f03ca028d15b583fcb3b7447e09cace52ea9e903d2ff2e2acbfb295beabe2a3f224dd7a04eed526f6d52e6544753e92bb8f25aac7e50f8c3f5894572c72688bbfe072dca';
// const tx = parseRawTx(x1);
// console.log(tx);
// console.log(tx.to === ZeroAddress);
// console.log(parseInt(tx.limit) > 25_00_000 * 1.4);

export function toBuffer(hex) {
    return new HexString(hex).toUint8Array();
}

export function move2ethAddress(addr) {
    addr = addr.toLowerCase();
    return '0x' + addr.slice(-40);
}
